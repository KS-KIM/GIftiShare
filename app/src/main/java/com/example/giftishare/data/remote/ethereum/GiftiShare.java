package com.example.giftishare.data.remote.ethereum;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple9;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.1.1.
 */
public class GiftiShare extends Contract {

    private static final String BINARY = "";

    public static final String FUNC_BUYCOUPON = "buyCoupon";

    public static final String FUNC_RESUMECOUPONSALE = "resumeCouponSale";

    public static final String FUNC_USECOUPON = "useCoupon";

    public static final String FUNC_ADDCOUPON = "addCoupon";

    public static final String FUNC_STOPCOUPONSALE = "stopCouponSale";

    public static final String FUNC_GETCOUPON = "getCoupon";

    @Deprecated
    protected GiftiShare(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected GiftiShare(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected GiftiShare(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected GiftiShare(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<TransactionReceipt> buyCoupon(String _uuid, BigInteger weiValue) {
        final Function function = new Function(
                FUNC_BUYCOUPON, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_uuid)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function, weiValue);
    }

    public RemoteCall<TransactionReceipt> resumeCouponSale(String _uuid) {
        final Function function = new Function(
                FUNC_RESUMECOUPONSALE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_uuid)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> useCoupon(String _uuid) {
        final Function function = new Function(
                FUNC_USECOUPON, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_uuid)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> addCoupon(String _uuid, String _name, String _category, String _company, BigInteger _price, String _barcode, String _deadline) {
        final Function function = new Function(
                FUNC_ADDCOUPON, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_uuid), 
                new org.web3j.abi.datatypes.Utf8String(_name), 
                new org.web3j.abi.datatypes.Utf8String(_category), 
                new org.web3j.abi.datatypes.Utf8String(_company), 
                new org.web3j.abi.datatypes.generated.Uint256(_price), 
                new org.web3j.abi.datatypes.Utf8String(_barcode), 
                new org.web3j.abi.datatypes.Utf8String(_deadline)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> stopCouponSale(String _uuid) {
        final Function function = new Function(
                FUNC_STOPCOUPONSALE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_uuid)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Tuple9<String, String, String, BigInteger, String, String, String, Boolean, Boolean>> getCoupon(String _uuid) {
        final Function function = new Function(FUNC_GETCOUPON, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_uuid)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}, new TypeReference<Bool>() {}, new TypeReference<Bool>() {}));
        return new RemoteCall<Tuple9<String, String, String, BigInteger, String, String, String, Boolean, Boolean>>(
                new Callable<Tuple9<String, String, String, BigInteger, String, String, String, Boolean, Boolean>>() {
                    @Override
                    public Tuple9<String, String, String, BigInteger, String, String, String, Boolean, Boolean> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple9<String, String, String, BigInteger, String, String, String, Boolean, Boolean>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue(), 
                                (String) results.get(4).getValue(), 
                                (String) results.get(5).getValue(), 
                                (String) results.get(6).getValue(), 
                                (Boolean) results.get(7).getValue(), 
                                (Boolean) results.get(8).getValue());
                    }
                });
    }

    @Deprecated
    public static GiftiShare load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new GiftiShare(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static GiftiShare load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new GiftiShare(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static GiftiShare load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new GiftiShare(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static GiftiShare load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new GiftiShare(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<GiftiShare> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(GiftiShare.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<GiftiShare> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(GiftiShare.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<GiftiShare> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(GiftiShare.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<GiftiShare> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(GiftiShare.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }
}
